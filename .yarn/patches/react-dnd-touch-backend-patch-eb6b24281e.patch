diff --git a/dist/TouchBackendImpl.js b/dist/TouchBackendImpl.js
index 401b36a8ace589eae757662b707c2f845007e770..c17768e25373076c6766f807140e361475a4457f 100644
--- a/dist/TouchBackendImpl.js
+++ b/dist/TouchBackendImpl.js
@@ -42,16 +42,14 @@ export class TouchBackendImpl {
     // Cancel drag-and-drop if a scroll event is received so that scroll doesn't interfere with dragging.
     // Use an arrow function to bind this event handler to the TouchBackendImpl object so that we can use `this`.
     handleScroll = (e) => {
-        if (window['scrolling']) {
-            window.removeEventListener('scroll', this.handleScroll)
-            return
-        }
         if (this.timeout) {
             clearTimeout(this.timeout);
             this.timeout = 0;
-        } else if (this.monitor.isDragging()) {
+        } else if (this.scrollHasBegun && this.monitor.isDragging()) {
             this.actions.endDrag();
         }
+
+        window.removeEventListener('scroll', this.handleScroll)
     }
 
     setup() {
@@ -253,6 +251,7 @@ export class TouchBackendImpl {
             }
             this.waitingForDelay = false;
             this.options.rootElement.dispatchEvent(new CustomEvent("dragStart"))
+            this.timeout = 0
         };
         this.handleTopMoveStartDelay = (e)=>{
             if (!eventShouldStartDrag(e)) {
@@ -272,6 +271,8 @@ export class TouchBackendImpl {
             }
         };
         this.handleTopMove = (e1)=>{
+            if (this.timeout) this.scrollHasBegun = true
+
             const clientOffset = getEventClientOffset(e1, this.lastTargetTouchFallback)
 
             if (clientOffset) {
@@ -307,8 +308,6 @@ export class TouchBackendImpl {
             if (!this.monitor.isDragging() && // eslint-disable-next-line no-prototype-builtins
             this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && distance(this._mouseClientOffset.x || 0, this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y) > (this.options.touchSlop ? this.options.touchSlop : 0)) {
                 this.moveStartSourceIds = undefined;
-                // window.removeEventListener('scroll', this.handleScroll);
-                console.info('beginDrag')
                 this.actions.beginDrag(moveStartSourceIds, {
                     clientOffset: this._mouseClientOffset,
                     getSourceClientOffset: this.getSourceClientOffset,
@@ -387,6 +386,7 @@ export class TouchBackendImpl {
             return undefined;
         };
         this.handleTopMoveEndCapture = (e)=>{
+            this.scrollHasBegun = false
             this._isScrolling = false;
             this.lastTargetTouchFallback = undefined;
             this._mouseClientOffset = {};
