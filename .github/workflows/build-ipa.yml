name: Build IPA

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Enable Corepack (used for managing yarn versions)
      - name: Enable Corepack
        run: corepack enable

      # Setup Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Node.js dependencies
      - name: Install Node.js dependencies
        run: yarn

      # Build JavaScript (optional step if needed for hybrid app setup)
      - name: Build JavaScript
        run: yarn build

      # Install Homebrew dependencies
      - name: Install Homebrew dependencies (jq, cocoapods)
        run: |
          brew install jq || echo "jq already installed"
          sudo gem install cocoapods

      # Install iOS dependencies via CocoaPods
      - name: Install CocoaPods
        run: |
          cd ios/App
          pod install

      # List available Xcode versions (for logging/debugging)
      - name: List available Xcode versions
        run: ls /Applications/

      # Set the desired Xcode version
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # Detect available scheme from the workspace
      - name: Detect Xcode scheme
        id: detect_scheme
        run: |
          SCHEME=$(xcodebuild -workspace ios/App/App.xcworkspace -list -json | jq -r '.workspace.schemes[0]')
          echo "Detected scheme: $SCHEME"
          echo "scheme=$SCHEME" >> $GITHUB_OUTPUT

      # Create ExportOptions.plist used for IPA export
      - name: Create ExportOptions.plist
        run: |
          cat <<EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>ad-hoc</string>
            <key>teamID</key>
            <string>YOUR_TEAM_ID</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>YOUR_BUNDLE_ID</key>
              <string>YOUR_PROVISIONING_PROFILE_NAME</string>
            </dict>
          </dict>
          </plist>
          EOF

      # Build and export IPA
      - name: Build IPA
        run: |
          xcodebuild -workspace ios/App/App.xcworkspace \
                     -scheme ${{ steps.detect_scheme.outputs.scheme }} \
                     -sdk iphoneos \
                     -configuration Release \
                     -allowProvisioningUpdates \
                     archive -archivePath $PWD/build/App.xcarchive

          xcodebuild -exportArchive \
                     -archivePath $PWD/build/App.xcarchive \
                     -exportOptionsPlist ExportOptions.plist \
                     -exportPath $PWD/build

      # Upload the resulting IPA file
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: App.ipa
          path: build/App.ipa
