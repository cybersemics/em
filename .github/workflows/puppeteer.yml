name: Puppeteer

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      rerun_id:
        description: 'Optional ID for tracking repeated runs'
        required: false

env:
  CI: true
  COPILOT_AGENT_FIREWALL_ALLOW_LIST_ADDITIONS: googlechromelabs.github.io,storage.googleapis.com

jobs:
  run:
    name: Puppeteer
    runs-on: ubuntu-latest
    services:
      browserless:
        image: browserless/chrome:latest
        ports:
          - 7566:3000
        env:
          CONNECTION_TIMEOUT: -1

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Set Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install npm dependencies
        run: yarn

      - name: Start SSL proxy
        run: docker run -d --rm --add-host=host.docker.internal:host-gateway -e "PORT=3000" -p 2552:443 esplo/docker-local-ssl-termination-proxy

      - name: Build
        run: yarn build

      - name: Serve
        run: |
          yarn servebuild &
          SERVER_PID=$!
          echo "Server PID: $SERVER_PID"

          echo "Waiting for server to be ready..."
          for i in {1..30}; do
            if ! kill -0 $SERVER_PID 2>/dev/null; then
              echo "Server process died!"
              exit 1
            fi

            # Test the full request path and check for 502 errors
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" -k https://localhost:2552 2>/dev/null || echo "000")

            if [ "$HTTP_STATUS" = "200" ]; then
              echo "Server is ready and responding with 200!"
              break
            elif [ "$HTTP_STATUS" = "502" ]; then
              echo "Attempt $i/30: Server running but returning 502 (Bad Gateway) - proxy not ready"
            elif [ "$HTTP_STATUS" = "000" ]; then
              echo "Attempt $i/30: Server not responding yet"
            else
              echo "Attempt $i/30: Server responding with status $HTTP_STATUS"
            fi

            if [ $i -eq 30 ]; then
              echo "Server failed to respond properly after 30 attempts (last status: $HTTP_STATUS)"
              exit 1
            fi

            sleep 1
          done

      - name: Test
        run: yarn test:puppeteer

      - name: Upload snapshot diff artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: __diff_output__
          path: src/e2e/puppeteer/__tests__/__image_snapshots__/**/__diff_output__/
          if-no-files-found: ignore
