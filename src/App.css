/* z-index schedule
   Keep these in one place to make it easier to determine interactions and prevent conflicts.
   Javascript should use z-index-* classnames so that z-indexes themselves are all defined here. */
:root {
  --z-index-popup: 1500;
  --z-index-gesture-trace: 50;
  --z-index-command-palette: 45;
  --z-index-modal: 40;
  --z-index-hamburger-menu: 30;
  --z-index-toolbar-container: 20;
  --z-index-toolbar-overlay: 15;
  --z-index-toolbar-arrow: 15;
  --z-index-toolbar: 10;
  /* above Sidebar */
  --z-index-navbar: 10;
  --z-index-latest-shortcuts: 10;
  /* above .children */
  --z-index-tutorial-trace-gesture: 5;
  /* above normal .drop-hover and subthoughts-drop-end */
  --z-index-drop-empty: 6;
  /* above thought and bullet. */
  --z-index-subthoughts-drop-end: 5;
  /* above .children */
  --z-index-tutorial: 3;
  /* above footer and breadcrumbs */
  --z-index-scroll-zone: 2;
  /* set z-index on .thought-annotation links so they are above .editable and thus clickable */
  --z-index-thought-annotation-link: 2;
  --z-index-resizer: 2;
  /* place above .thought-container to preserve click area of bullet
   otherwise clicking on the bottom edge of the bullet will activate cursorUp from the child */
  --z-index-bullet: 2;
  /* define a single var to place any element in a stacking context */
  --z-index-stack: 1;
  --z-index-hide: -1;
  /* Sidebar is set inline to z-index: 1 */

  --safe-area-top: env(safe-area-inset-top);
  --safe-area-bottom: env(safe-area-inset-bottom);
}

.z-index-popup {
  z-index: var(--z-index-popup);
}
.z-index-command-palette {
  z-index: var(--z-index-command-palette);
}
.z-index-gesture-trace {
  z-index: var(--z-index-gesture-trace);
}
.z-index-hamburger-menu {
  z-index: var(--z-index-hamburger-menu);
}
.z-index-navbar {
  z-index: var(--z-index-navbar);
}
.z-index-subthoughts-drop-end {
  z-index: var(--z-index-subthoughts-drop-end);
}
.z-index-stack {
  z-index: var(--z-index-stack);
}
.z-index-hide {
  z-index: var(--z-index-hide);
}
.z-index-scroll-zone {
  z-index: var(--z-index-scroll-zone);
}

/* fixed debug box in bottom right */
#debug {
  position: fixed;
  bottom: 0;
  right: 10px;
  white-space: pre;
  font-family: monospace;
  font-size: 10px;
  color: lightblue;
}

html,
body,
#root,
#app {
  height: 100%;
  font-size: 16px;
}

body,
textarea {
  font-weight: 300;
  font-family: 'Helvetica';
  line-height: 1.25;
}

body {
  /* Disables pull-to-refresh but allows overscroll glow effects. */
  overscroll-behavior-y: contain;
}

button {
  font-size: 1.2em;
}

a {
  cursor: pointer;
  text-decoration-line: underline;
  outline: none;
  color: #1b6f9a;
  font-weight: 400;
}

/* Headings */
h1 {
  font-size: 32px;
  font-weight: 400;
  margin-top: 0;
  margin-bottom: 12px;
}

h2 {
  font-size: 100%;
  font-weight: 300;
  border-bottom: solid 1px black;
  margin-bottom: 25px;
}

.dark h2 {
  border-bottom: solid 1px white;
}

ul {
  margin-left: 1.5em;
  padding-left: 0;
}

ul ul {
  margin-left: 1.2em;
}

ul ul.context-chain {
  margin-left: 1.6em;
}

li {
  list-style: none;
}

input[type='email'],
input[type='password'],
input[type='text'] {
  width: 40%;
  min-width: 300px;
  display: block;
  margin: 0 auto;
  padding: 10px;
  font-size: 16px;
  border: solid 1px #ddd;
  border-radius: 5px;
  margin-bottom: 2vh;
}
input:focus {
  border: solid 1px #eee;
  outline: 0 none;
}

/** Aligns checkbox and label vertically. */
input[type='checkbox'] {
  vertical-align: middle;
  position: relative;
  bottom: 1px;
}

label {
  display: block;
}

.dark input:focus {
  border: solid 1px #999;
}

.dark input {
  color: white;
  border: solid 1px #333;
  background-color: black;
}

textarea {
  width: calc(100% - 40px);
  display: block;
  margin: 0 auto;
  height: 50vh;
  padding: 10px;
  font-size: 16px;
  border: solid 1px #ddd;
}

.dark textarea {
  color: white;
  border: solid 1px #333;
  background-color: black;
}

.clear {
  clear: both;
}
.relative {
  position: relative;
}
.missing {
  color: #ccc;
}
.direct {
  color: #212121;
}
.center {
  text-align: center;
}
.left {
  text-align: left;
}
.hidden {
  display: none !important;
}
.shown {
  display: inline-block;
}

@media screen and (min-width: 600px) {
  .center-desktop {
    text-align: center;
  }
}
.upper-right {
  position: absolute;
  top: 0;
  right: 0;
}

a.button {
  padding: 0.5em 2em;
  min-width: 6em;
  text-decoration: none;
  display: inline-block;
  border-radius: 99px;
  color: white;
  background-color: black;
}

a.button.action-button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  transition: all 100ms ease-in-out;
}

a.button.action-button.disabled {
  opacity: 0.5;
}

a.button:active {
  background-color: #111;
}

.button-small {
  padding: 2px 0;
}

a.button-less-padding {
  padding: 4px 12px;
}

.dark a.button {
  color: black;
  background-color: white;
}

.dark a.button:active {
  background-color: #dcdcdc;
}

.dark .tutorial-text a.button {
  color: black;
}

a.button-variable-width {
  min-width: 0;
}

a.button[disabled] {
  opacity: 0.25;
  pointer-events: none;
  user-select: none;
  cursor: auto;
}

button[disabled] {
  opacity: 0.25;
  pointer-events: none;
  user-select: none;
  cursor: auto;
}

a.button-dim {
  opacity: 0.5;
}

a.text-link {
  text-decoration: underline;
}

.text-small {
  font-size: 80%;
}

.text-medium {
  font-size: 90%;
}

.list-none li::before {
  display: none;
}

.list-bullet li {
  list-style: disc;
}

.extend-tap {
  margin: -0.5em;
  padding: 0.5em;
}

.extend-tap-small {
  margin: -0.25em;
  padding: 0.25em;
}

.expand-click-area-left {
  padding-left: 10px;
  padding-top: 10px;
  padding-bottom: 10px;
  margin-left: -10px;
}

.expand-click-area-right {
  padding-right: 10px;
  padding-top: 10px;
  padding-bottom: 10px;
}

.breadcrumbs .num-contexts {
  margin-right: -0.5em;
}

.breadcrumbs a {
  color: inherit;
  text-decoration: none;
}

.context-breadcrumbs {
  font-size: 0.867em;
  color: gray;
  /* approximate bullet width across multiple font sizes */
  margin-left: calc(1.3em - 14.5px);
  margin-top: 0.533em;
  min-height: 1em;
}

.child .context-breadcrumbs {
  /* Tighten up the space between the context-breadcrumbs and the thought (similar to the space above a note). */
  margin-bottom: -0.25em;
  /* Use padding-top instead of margin-top to ensure this gets included in the dynamic height of each thought.
     Otherwise the accumulated y value will not be correct. */
  padding-top: 0.5em;
}

.favorites .context-breadcrumbs {
  margin-top: 1em;
  margin-left: 0;
  line-height: 1.5;
}

/* override link font-weight to allow bold on hover */
.favorites a {
  font-weight: inherit;
}

.context-breadcrumbs .superscript-container {
  position: relative;
  left: -2px;
  top: -3px;
}

.thought-annotation .context-breadcrumbs {
  margin-right: 2px;
}

.context-breadcrumbs .depth-bar {
  display: none;
}

/* required to avoid iPhone converting to emoji
 https://stackoverflow.com/questions/11178433/how-do-i-stop-ios-from-converting-a-small-pointing-right-triangle-character-into
 */
.left-triangle::after {
  content: '\25C0 \FE0E';
}
.right-triangle::after {
  content: '\25B6 \FE0E';
}

/* Toolbar */

.toolbar-container {
  position: relative;
  text-align: right;
  max-width: 100%;
  user-select: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  white-space: nowrap;
}

.toolbar-fixed {
  position: fixed;
  top: 0;
  right: 0;
  z-index: var(--z-index-toolbar-container);
  /* Extend upward beyond the top edge of the screen. This is necessary because when the position:absolute hack is used for Safari while the keyboard is up, the mask is not able to stay perfectly glued to the top edge during scrolling to emulate position:fixed, and underlying thoughts can bleed through. */
  margin-top: -500px;
  padding-top: 500px;
}

.toolbar {
  max-width: 100%;
  position: relative;
  touch-action: inherit;
  display: inline-flex;
  overflow-x: scroll;
  z-index: var(--z-index-toolbar);
  /* override default align-items:stretch so that icons do not take up full height of toolbar */
  align-items: flex-start;
}

.toolbar::-webkit-scrollbar {
  display: none;
}

.toolbar-fixed .toolbar > *:last-child {
  /* add right margin so right-arrow does not feel too attached to the right edge of the screen */
  margin-right: 1em;
}

.toolbar-fixed .toolbar {
  max-width: calc(100% - 4em);
}

#left-arrow,
#right-arrow {
  position: absolute;
  font-size: 80%;
  padding-top: 16px;
  vertical-align: middle;
  color: gray;
  background-color: white;
  display: inline-block;
  line-height: 20px;
  z-index: var(--z-index-toolbar-arrow);
}

.dark #left-arrow,
.dark #right-arrow {
  background-color: black;
}

#left-arrow {
  margin-left: -5px;
  padding-left: 5px;
  padding-right: 4px;
}

#right-arrow {
  right: -11px;
  padding-left: 4px;
  padding-right: 13px;
}

.toolbar-fixed #right-arrow {
  right: 0;
}

.toolbar-icon {
  cursor: pointer;
  display: inline-block;
  padding: 5px 8px;
  border-radius: 3px;
  z-index: var(--z-index-stack);
}

.toolbar-icon .icon {
  padding-top: 10px;
  flex: 1;
}

/* TextColor icon is used inside the toolbar-popup, so we need to revert the padding from .toolbar-icon .icon. More resilient than making .toolbar-icon .icon into a child selector. */
.toolbar-popup .icon {
  padding-top: 0;
}

.icon-text {
  flex: 8;
  font-size: 12px;
}

/* Toolbar mask */
.toolbar-mask {
  position: absolute;
  /* sometimes the body peeks through with top:0 */
  top: -1px;
  left: 0;
  /* Hide the popup-close-x in the customize modal by extending the toolbar-mask to the right. Otherwise it would be too cluttered. Use just enough to cover popup-close-x without  */
  right: -1.75em;
  background-color: white;
  pointer-events: none; /* allows clickOnEmptySpace */
}

.dark .toolbar-mask {
  background-color: black;
  box-shadow: -10px 10px 20px 0 black;
}

.toolbar-fixed .toolbar-mask {
  box-shadow: 10px -20px 15px 25px white;
  padding-top: 500px; /* offset .toolbar-container negative margin-top */
}

.dark .toolbar-fixed .toolbar-mask {
  box-shadow: 10px -20px 15px 25px black;
}

/* Thoughts */

[contenteditable] {
  outline: none;
  user-select: text;
}

[contenteditable].active-underline:focus {
  border-bottom: solid 1px;
}

.thought,
.thought-annotation {
  max-width: calc(100% - 1em); /* expand click area. offset content padding to prevent line break */
  /* do not set font-weight or it will override =heading style. */
  margin-top: 0;
  display: inline-block;
  vertical-align: top;
  white-space: pre-wrap;
}

/* Required for initial width calculation of table cells to prevent false line breaks. */
.table-col1 .thought,
.table-col1 .thought-annotation {
  max-width: 100%;
}

.thought-annotation {
  position: absolute;
  pointer-events: none;
  user-select: none;
  /* offset parent container (.child) padding-left since position:absolute changes the width calculation; */
  box-sizing: border-box;
}

.editable-annotation {
  display: inline-block;
}

.thought-annotation a {
  position: relative;
  z-index: var(--z-index-thought-annotation-link);
}

.editable-annotation-text,
.thought-annotation .breadcrumbs {
  visibility: hidden;
  /*color: tomato;*/
}

.subthought-highlight {
  border-bottom: solid 1px;
}

.thought-annotation .num-contexts {
  position: absolute;
}

/* Use line-height to vertically center the text and bullet. We cannot use padding since it messes up the selection. This needs to be overwritten on multiline elements. See ".child .editable" below. */
.thought-container {
  /* must match value used in Editable useMultiline */
  line-height: 1.72;
}

/* Add some space before the first sibling after an expanded thought to make room for its children. Cannot use line-height since it adds unwanted space on the bottom, so we have to use padding-top even though it messes up the caret placement on click. See ".child .editable" below for details. */
.child.expanded:not(.leaf) + .child > .thought-container {
  padding-top: 0.3em;
}
.child.expanded:not(.leaf) + .child > .thought-container .bullet {
  top: 0.3em;
}

.child .editable,
.editable-annotation-text {
  /* Add some padding-right for increased click area. */
  /* Add some padding-left otherwise caret is invisible on empty elements. */
  /* Cannot use padding-top on editable, as clicking it causes the selection to go to the beginning. */
  /* Cannot use padding-bottom on editable, as clicking it causes the selection to go to the end. */
  padding: 0 1em 0 0.333em;
  /* slide editable up so that it overlaps with the previous thought, ensuring there is no dead click zone from clip-path */
  margin: -0.5px -1em 0 calc(1em - 18px);
  /* create stacking order to position above thought-annotation so that function background color does not mask thought */
  position: relative;
  /* Prevent the selection from being incorrectly set to the beginning of the thought when the top edge is clicked, and the end of the thought when the bottom edge is clicked. Instead, we want the usual behavior of the selection being placed near the click. */
  clip-path: inset(0.001px 0 0.1em 0);
  /* Use minimum height to the cover the gap left by clip-path */
  min-height: 1.9em;
}

/* On Safari, the caret is not lined up with the placeholder text on empty thoughts (due to either negative margin or line-height).
   Add padding-top to shift the caret down.
   This bumps the placeholder text off, so we need to shift the placeholder text up by the same amount.
*/
.safari .child .editable:empty {
  padding-top: 0.2em;
  margin-bottom: -0.2em; /* offset padding-top, otherwise next sibling will be bumped down */
}
/* shift placeholder up to offset padding-top */
.safari .child .editable:empty::before {
  top: -0.2em;
  position: relative;
}

/* TODO: Safari only? */
.mobile .child .editable {
  margin-top: -2px;
}

/* Define the correct line-height for multiline thoughts. This is not used by single-line thoughts where line-height is used instead of padding in order to preserve click behavior. See ".thought-container" and ".child .editable" above. Increase specificity to override ".mobiile .child .editable". */
.multiline.multiline.multiline.multiline {
  line-height: 1.25;
  margin-top: -0.12em;
  padding-bottom: 0.5em;
  padding-top: 0.33em;
  /* A small amount of margin-bottom may make multiline thoughts feel less crunched. However, this must be prevented or overridden when the thought has a note, otherwise there will be too much space in between the thought and the note. */
}

/* padding-top */
.editable-annotation.multiline.multiline.multiline.multiline {
  margin-top: calc(-0.12em + 0.33em);
}

.safari .multiline.multiline.multiline.multiline {
  padding-top: 0.3em;
}

/* Hacky, nonlinear multiline padding-top that works across all font sizes on mobile Safari. Otherwise the thought goes out of alignment with the bullet when it becomes multiline. */
.mobile.safari .multiline.multiline.multiline.multiline {
  /* 0.2em works at font size 13 */
  /* 0.24em works at font size 18 */
  /* works without max at font sizes 18–24 */
  padding-top: calc(max(0.5em, 7.5px) - 5px);
}

.child .editable,
.editable-annotation-text {
  word-break: break-word; /* breaks urls; backwards-compatible with regular text unlike break-all */
}

.mobile .child .editable {
  padding-bottom: 0;
}

.children-subheading {
  position: relative;
  margin-top: 3px;
  margin-bottom: 2px;
  padding-bottom: 4px;
}

.ellipsis {
  font-size: 75%;
}

.down-chevron {
  font-style: normal;
  font-size: 125%;
  line-height: 0;
}

.up-chevron {
  font-style: normal;
  font-size: 75%;
  position: relative;
  top: 2px;
}

.content {
  background-color: white;
  color: #111;
  padding: 80px 10px 153px 50px
    /* padding-bottom must cover the footer (logged out: 79px, logged in: 93px) plus some additional visual spacing */;
  position: relative;
  transition:
    transform 0 ease-out,
    margin 0 ease-out; /* add transition time after initial load and scroll into place */
  box-sizing: border-box; /* make height include padding so that the min-height can be exctly 100vh */
  max-width: 66%;
  margin: 0 auto;
  min-height: 100vh; /* forces footer to bottom when there is little content */
}

@media (max-width: 960px) {
  .content {
    max-width: 80%;
  }
}

@media (max-width: 560px) {
  .content {
    max-width: 50em;
    padding-left: 40px;
  }
}

/* reduce bottom space during tutorial to try to keep the tutorial in view as much as possible */
.content-tutorial {
  min-height: auto;
  padding-bottom: 20px;
}

body.dark {
  color: white;
  background-color: black;
}

.dark .root,
.dark .content,
.dark .modal {
  background-color: black;
  color: #e3e3e3;
}

.dark .footer a,
.dark .tutorial-text a {
  color: #87ceeb;
}

.logo {
  width: 24px;
}

/* Navigation styles */
.nav {
  position: sticky;
  z-index: var(--z-index-stack);
  padding: 0 15px 0 10px;
  bottom: 0;
}

.nav-container {
  position: absolute;
  width: calc(100% - 30px); /* offset .nav padding */
  transition: background-color 0.2s ease-out;
}

.nav-container .nav-right-button-group {
  display: grid;
  grid-auto-flow: column;
  grid-column-gap: 15px;
  align-items: center;
}

.nav-top {
  top: 0;
}

.nav-bottom {
  padding: 0 15px;
}

.nav-bottom .nav-container {
  position: relative;
  width: 100%;
  display: flex;
  align-items: flex-end;
  /* rounded screens */
  padding-bottom: calc(max(10px, var(--safe-area-bottom)));
}

.home .logo-wrapper {
  display: flex;
  align-items: center;
}

.nav .home {
  position: relative;
  z-index: var(--z-index-stack);
}

.nav-top .home {
  float: left;
  margin-right: 2px; /* spacing before breadcrumbs */
}

.nav-bottom .home {
  position: absolute;
  left: -2px;
}

.modal .home {
  display: inline-block;
  position: relative;
  top: 5px;
  margin-top: -10px;
}

.thought .home {
  position: relative;
  top: -4px;
  left: -2px;
}

.breadcrumbs .home {
  /* override .nav-bottom .home */
  position: static;
}

.breadcrumbs .home .logo-wrapper {
  /* override .home .logo-wrapper */
  display: inline;
  position: relative;
  top: 3px;
}

.thought-annotation .home {
  display: none;
}

.error-message {
  position: fixed;
  top: var(--safe-area-top);
  left: 0;
  right: 0;
  padding: 5px 25px 5px 5px; /* extra padding-right to make room for x */
  background-color: #c23;
  color: white;
  text-align: center;
  z-index: var(--z-index-popup);
  word-break: break-word; /* break at normal word boundary but also within word if it exceeds width of container */
}

.status {
  color: #aaa;
  background-color: rgba(255, 255, 255, 0.8);
  float: left;
  position: fixed;
  top: 5;
  z-index: var(--z-index-popup);
}

.status span {
  padding: 15px 15px 10px 15px;
  display: inline-block;
}

.dark .status {
  background-color: rgba(0, 0, 0, 0.8);
  color: #e3e3e3;
}

.dark .offline {
  color: #666;
}

.nav-breadcrumbs {
  width: 100%;
  color: #999;
  padding-left: 15px;
  font-size: 14px;
  vertical-align: bottom;
}

.nav-breadcrumbs.nonempty {
  box-shadow: 0 10px 15px 25px white;
  clip-path: inset(
    -30px -30px 0 -30px
  ); /* clip box-shadow to top half to prevent covering footer on mobile Safari (z-index doesn't work) */
}

.dark .nav-breadcrumbs.nonempty {
  box-shadow: 0 10px 15px 25px black;
}

/* to remove padding from breadcrumbs used inside sidebar recenlty edited thoughts  */
.thoughts-tab .nav-breadcrumbs {
  padding: 0;
}

/** offset logo */
.nav-bottom .nav-breadcrumbs {
  width: calc(100% - 40px);
  padding-left: 35px;
}

.nav-breadcrumbs a {
  color: #999;
}

.nav-breadcrumbs a:hover {
  color: black;
}

.dark .nav-breadcrumbs a:hover {
  color: white;
}

/* react-transition-group animation: fade */
.fade-enter {
  opacity: 0;
}

.fade-enter-active {
  opacity: 1;
  transition: opacity 0.2s ease-out;
}

.fade-exit {
  opacity: 1;
}

.fade-exit-active {
  opacity: 0;
  transition: opacity 0.2s ease-out;
}

/* react-transition-group animation: fade-slow-out */
.fade-slow-out-enter {
  opacity: 0;
}

.fade-slow-out-enter-active {
  opacity: 1;
  transition: opacity 0.2s ease-out;
}

.fade-slow-out-exit {
  opacity: 1;
}

.fade-slow-out-exit-active {
  opacity: 0;
  transition: opacity 0.8s ease-out;
}

/* react-transition-group animation: slidedown */
/* use transform: translateY(-100%) for auto height animation (less smooth) */
.slidedown-enter {
  margin-bottom: 0;
  margin-top: -3em;
}

.slidedown-enter-active {
  margin-bottom: 1em;
  margin-top: 0;
  transition: margin 150ms ease-out;
}

.slidedown-enter-done {
  margin-bottom: 1em;
  margin-top: 0;
}

.slidedown-exit {
  margin-bottom: 1em;
  margin-top: 0;
}

.slidedown-exit-active {
  margin-bottom: 0;
  margin-top: -3em;
  transition: margin 150ms ease-out;
}

.slidedown-exit-done {
  margin-bottom: 0;
  margin-top: -3em;
}

/* react-transition-group animation: fade-400 */
.fade-400-enter {
  opacity: 0;
}

.fade-400-enter-active {
  opacity: 1;
  transition: opacity 400ms ease 0ms;
}

.fade-400-exit {
  opacity: 1;
}

.fade-400-exit-active {
  opacity: 0;
  transition: opacity 400ms ease 0ms;
}

/* react-transition-group animation: fade-600 */
.fade-600-enter {
  opacity: 0;
}

.fade-600-enter-active {
  opacity: 1;
  transition: opacity 600ms ease 0ms;
}

.fade-600-exit {
  opacity: 1;
}

.fade-600-exit-active {
  opacity: 0;
  transition: opacity 700ms ease 0ms;
}

/* react-transition-group animation: fade-both */
/* eases in and out  */
.fade-both-enter {
  opacity: 0;
}

.fade-both-enter-active {
  opacity: 1;
  transition: opacity 400ms ease-in-out;
}

.fade-both-enter-done {
  opacity: 1;
}

.fade-both-exit-done {
  opacity: 0;
}

.fade-both-exit {
  opacity: 1;
}

.fade-both-exit-active {
  opacity: 0;
  transition: opacity 400ms ease-in-out;
}

/* react-transition-group animation: slide */
.slide-enter {
  transform: translateX(100vw);
  opacity: 0;
  position: absolute;
}

.slide-enter.slide-enter-active {
  transform: translateX(0);
  opacity: 1;
  transition: all 200ms ease-in-out 200ms;
}

.slide-exit {
  transform: translateX(0);
  opacity: 1;
}

.slide-exit.slide-exit-active {
  transform: translateX(-100vw);
  opacity: 0;
}

/* react-transition-group animation: slide-right */
.slide-right-enter {
  transform: translateX(100%);
}

.slide-right-enter-active {
  transform: translateX(0);
  transition: all 200ms ease-out;
}

.slide-right-exit {
  transform: translateX(0);
}

.slide-right-exit-active {
  transform: translateX(100%);
  transition: all 200ms ease-out;
}

.error {
  color: red;
}

.online {
  color: lightgreen;
}

.link {
  word-break: break-word;
}

.superscript-container {
  white-space: nowrap; /* prevent expanded click area from wrapping */
  z-index: var(--z-index-stack);
  pointer-events: none;
  user-select: none;
}

.superscript-container sup {
  position: relative;
  z-index: var(--z-index-stack); /* above depth-bar */
}

.num-contexts {
  font-size: 60%;
  white-space: nowrap; /* prevent long depth-bars from wrapping */
}

.num-contexts > sup {
  top: -1px;
  left: 1px;
}

.num-contexts > sup > a {
  padding-right: 15px; /* additional click area */
  margin-right: -15px;
  padding-bottom: 8px;
  margin-bottom: -8px;
}

h1 .num-contexts {
  font-size: 40%;
  top: -4px;
  left: 1px;
}

.add-new-thought-link {
  display: inline-block;
  color: #ccc;
  position: relative;
}

.depth-bar {
  position: absolute;
  margin-left: 5px;
  display: inline-block;
  height: 2px;
  background-color: #ddd;
  transition: background-color 0.75s ease-out;
  /*margin-top: 1em;*/
  margin-top: 0.6em;
  /*margin-left: 3px;*/
}

.num-contexts .depth-bar {
  margin-top: 1em;
  margin-left: 0px;
}

.has-other-contexts {
  margin-left: 12px;
}

.from > :first-child > .thought-container > .thought {
  font-weight: 400;
}

.add-new-thought {
  outline: none;
  min-width: 3.75em;
  display: inline-block;
  border-bottom: solid 1px #ccc;
  margin-left: -2px;
}

.search[contenteditable] {
  display: block;
  padding-top: 0;
}

.center-in-content {
  text-align: center;
  margin-left: -30px;
}

.absolute-center {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 10%; /* slightly above the fold */
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  user-select: none;
  cursor: default;
}

.text-note,
.placeholder,
[placeholder]:empty::before {
  font-style: italic;
  color: rgba(7, 7, 7, 0.5);
}

/* empty class is set dynamically by javascript during editing. */
/* :empty does not work because thought may contain <br> */
[placeholder]:empty::before {
  content: attr(placeholder);
  cursor: text;
}

.search:empty::before {
  padding-top: 2px;
}

.dark .text-note,
.dark .placeholder,
.dark [placeholder]:empty::before {
  color: rgba(255, 255, 255, 0.5);
}

/* The placeholder color should be inversed when a light background color is applied. */
/* See: StaticThought */
.text-note.inverse,
.placeholder.inverse,
.thought.inverse [placeholder]:empty::before {
  color: rgba(255, 255, 255, 0.5);
}
.dark .text-note.inverse,
.dark .placeholder.inverse,
.dark .thought.inverse [placeholder]:empty::before {
  color: rgba(7, 7, 7, 0.5);
}

.bullet {
  z-index: var(--z-index-bullet);
  /* required for smooth animation when additional space is added after an expanded thought. See ".child.expanded:not(.leaf) + .child > .thought-container .bullet". */
  top: 0;
}

/* Disable long press to select on iOS. See useLongPress for details. */
.pressed .editable {
  user-select: none;
}

/* Style bullet glyph with CSS to allow .graypulse animation to override it. */
.bullet .glyph {
  fill: rgba(39, 39, 39, 1);
}
.dark .bullet .glyph {
  fill: rgba(217, 217, 217, 1);
}

.child > .thought-container > .bullet .glyph {
  position: relative;
  /*margin-right: 10px;    this causes the li to break at the beginning with longer text */
}

.child > .thought-container > .bullet .glyph .glyph-fg {
  transition:
    transform 0.1s ease-out,
    fill-opacity 0.5s ease-out;
}

.search-container > .bullet-search {
  position: absolute;
  margin-top: -2px;
  margin-left: -12px;
}

.mobile .child > .thought-container > .bullet.show-contexts {
  margin-right: -1.5px;
}

.mobile .child > .thought-container > .bullet.show-contexts .glyph {
  font-size: 80%;
  left: -0.08em;
  top: 0.05em;
}

.child.expanded:not(.leaf) > .thought-container > .bullet .glyph .glyph-fg.triangle,
.child.editing:not(.leaf) > .thought-container > .bullet .glyph .glyph-fg.triangle,
.child.cursor-parent:not(.leaf) > .thought-container > .bullet .glyph .glyph-fg.triangle,
.child.cursor-grandparent:not(.leaf) > .thought-container > .bullet .glyph .glyph-fg.triangle {
  transform: rotate(90deg) translateX(10px);
}

.mobile .child.expanded:not(.leaf) > .thought-container > .bullet.show-contexts .glyph .glyph-fg,
.mobile .child.editing:not(.leaf) > .thought-container > .bullet.show-contexts .glyph .glyph-fg,
.mobile .child.cursor-parent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph .glyph-fg,
.mobile .child.cursor-grandparent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph .glyph-fg {
  left: -0.02em;
}

.child.leaf > .thought-container > .bullet.show-contexts .glyph {
  font-size: 90%;
  top: -0.05em;
}

.mobile .child.leaf > .thought-container > .bullet.show-contexts .glyph {
  top: 0;
  left: -0.3em;
  margin-right: calc(-0.48em - 5px); /* offset from .child > .thought-container > .bullet .glyph margin-right */
}

.archive-check {
  margin-left: -12px;
  margin-top: 5px;
}

.archive-check label {
  cursor: pointer;
  font-size: 12px;
}

/* Android Section */

/*### Phone Portrait ### */

@media (max-width: 500px) {
  .android .child {
    position: relative; /* So that .thought can be sized at 100% and .thought .bullet-cursor-overlay bullet can be positioned correctly */
    margin-left: -100px; /* must use margin-left not left so that content wrapping is not affected
  margin-top: 0.501em; /* Match editable padding */
    padding: 0.2em 0 0.2em 100px;
  }

  .android .child > .thought-container > .bullet {
    margin-left: -3px;
  }

  .android .child > .thought-container > .bullet .glyph {
    position: relative;
    margin-left: -16.8px;
    opacity: 0.9;
    transition: opacity 0.75s ease-in-out;
    margin-right: -5px; /* increase click area */
    left: 3px;
    font-size: 16px;
  }

  /* Contexted Styles */
  .android .child > .thought-container > .bullet.show-contexts .glyph {
    font-size: 149%;
    left: 2px;
    top: -5.1px;
  }

  .android .child.leaf > .thought-container > .bullet.show-contexts .glyph {
    position: relative;
    font-size: 160%;
    left: 1px;
    top: -8.1px;
    margin-right: -5px;
    padding-right: 10px;
  }

  .android .child.expanded:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.editing:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.cursor-parent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.cursor-grandparent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph {
    left: 2px;
    font-size: 20px;
    top: -2.5px;
  }

  .android .child.expanded:not(.leaf) > .thought-container > .bullet .glyph,
  .android .child.editing:not(.leaf) > .thought-container > .bullet .glyph,
  .android .child.cursor-parent:not(.leaf) > .thought-container > .bullet .glyph,
  .android .child.cursor-grandparent:not(.leaf) > .thought-container > .bullet .glyph {
    left: 2px;
    top: -1.6px;
    font-size: 19px;
  }

  .android .children-new .child > .thought-container > .bullet .glyph {
    content: '+';
    left: -0.15em;
    top: -0.05em;
    margin-right: -0.3em;
  }

  .android .children-new .child > .thought-container > .bullet .glyph {
    left: 0.05em;
    top: -0.1em;
    margin-right: -0.1em;
  }

  .android .thought,
  .android .thought-annotation {
    margin-top: -0.1px;
    margin-left: 0.5em;
  }
  .android .children-subheading {
    position: relative;
    margin-top: -8px;
    margin-bottom: 2px;
    padding-bottom: 4px;
  }
  .android .child {
    position: relative; /* So that .thought can be sized at 100% and .thought .bullet-cursor-overlay bullet can be positioned correctly */
    margin-left: -100px; /* must use margin-left not left so that content wrapping is not affected
  margin-top: 0.501em; /* Match editable padding */
    padding: 1px 0 0.2px 100px;
  }

  .android .thought,
  .android .thought-annotation {
    margin-top: -2.1px;
    margin-left: 0.5em;
  }
}

/* Tablet Properties */

@media (min-width: 560px) and (max-width: 1024px) {
  .android .child > .thought-container > .bullet {
    transition: transform 0.1s ease-in-out;
    margin-left: -3px;
  }

  .android .child > .thought-container > .bullet .glyph {
    position: relative;
    margin-left: -16.8px;
    opacity: 0.8;
    transition: opacity 0.75s ease-in-out;
    margin-right: -5px; /* increase click area */
    left: 4px;
    font-size: 28px;
  }

  /* Contexted Styles */
  .android .child > .thought-container > .bullet.show-contexts .glyph {
    font-size: 149%;
    left: 2px;
    top: -5.1px;
  }

  .android .child.leaf > .thought-container > .bullet.show-contexts .glyph {
    position: relative;
    font-size: 171%;
    left: 2px;
    top: -7.1px;
    margin-right: -5px;
    padding-right: 10px;
  }

  .android .child.expanded:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.editing:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.cursor-parent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph,
  .android .child.cursor-grandparent:not(.leaf) > .thought-container > .bullet.show-contexts .glyph {
    left: 3px;
    top: -5.1px;
  }

  .android
    .child.show-contexts:first-of-type
    > .thought-container
    > .thought
    .bullet-cursor-overlay.bullet-cursor-overlay-highlighted {
    margin-top: calc(0.18em - 4px); /* */
  }

  .android .children-new .child > .thought-container > .bullet .glyph {
    content: '+';
    left: -0.15em;
    top: -0.05em;
    margin-right: -0.3em;
  }

  .android .children-new .child > .thought-container > .bullet .glyph {
    left: 0.05em;
    top: -0.1em;
    margin-right: -0.1em;
  }
  .android .thought,
  .android .thought-annotation {
    margin-top: -0.1px;
    margin-left: 0.5em;
  }
  .android .children-subheading {
    position: relative;
    margin-top: -8px;
    margin-bottom: 2px;
    padding-bottom: 4px;
  }
  .android .child {
    position: relative; /* So that .thought can be sized at 100% and .thought .bullet-cursor-overlay bullet can be positioned correctly */
    margin-left: -100px; /* must use margin-left not left so that content wrapping is not affected
  margin-top: 0.501em; /* Match editable padding */
    padding: 1px 0 0.2px 100px;
  }
}

/*.context-chain > .child > .thought-container > .bullet .glyph {
  font-size: 10px;
  content: '◀';
  top: -0.1em;
  left: -0.1em;
  margin-right: -0.30em;
}

.mobile .context-chain > .child > .thought-container > .bullet .glyph {
  font-size: 14px;
  content: '◄';
  margin-left: -16px;
  margin-right: -0.15em;
}

.context-chain > .child.leaf::before {
  font-size: 12px;
  content: '◁';
  top: -0.05em;
  margin-right: -0.25em;
}

.mobile .context-chain > .child.leaf::before {
  content: '◅';
  margin-right: 0.05em;
  margin-left: -17px;
  top: -0.15em;
}
*/

/* overlay bullet for cursor */

.children-new .child > .thought-container > .bullet .glyph {
  content: '+';
  left: -0.15em;
  top: -0.05em;
  margin-right: -0.3em;
}

.mobile .children-new .child > .thought-container > .bullet .glyph {
  left: 0.05em;
  top: -0.1em;
  margin-right: -0.1em;
}

/* autofocus */

/*
  At deeper depths, the available width becomes smaller and smaller. Due to the left-translate (above), the left edge will be kept relatively close to the left edge of the screen as one navigates deeper. However its bounding box is the same, so its width will still get smaller and smaller, although it will appear that it is getting compressed from the right. See: https://github.com/cybersemics/em/issues/752.

  Offset this by adding a negative right margin.

  This has the downside of causing multi-line text to reflow as one navigates deeper, as its bounding box is now dependent on its depth in the hierarchy. See: https://github.com/cybersemics/em/issues/251. Only apply this to .autofocus-hide-parent instead of both 2 & 3 so that this side effect is less pronounced. Ultimately there is a natural tradeoff, and it's more important that the full width is preserved.
*/
/*.autofocus-hide-parent {
  margin-right: -1.2em;
}*/

/* new thought */
.children-new {
  transition: all 0.75s ease-out;
}

/* overflow:hidden breaks sticky header */
.container {
  position: relative;
}

/* Footer styles - START */

.footer {
  position: relative;
  padding: 1.75em;
  margin: 0;
  text-align: right;
  font-size: 75%;
  list-style: none;
  background-color: #e4e4e4; /* 80% of #ddd */
  box-sizing: border-box;
  width: 100%;
  /* above ScrollZone */
  z-index: var(--z-index-modal);
}

.dark .footer a {
  color: skyblue;
}

.footer .support-link {
  color: inherit;
}

.dark .footer {
  background-color: #1a1a1a; /* 80% of #212121 */
  color: white;
}

.dark .footer .support-link {
  color: white;
}

.footer .support-link:hover {
  text-decoration: underline;
}

.footer-divider {
  margin: 0 6px;
  user-select: none;
}

.increase-font {
  font-size: 1.6em;
  padding-right: 12px;
}

.decrease-font {
  padding-left: 12px;
  padding-right: 12px;
}

.floatLeft {
  float: left;
}
/* .footer .floatLeft a { text-decoration: none; } may be better with underline*/

/* Footer styles - END */

/* for some reason opacity bleeds through modal*/
.dim {
  color: rgba(7, 7, 7, 0.5);
}
.dark .dim {
  color: rgba(255, 255, 255, 0.5);
}

.modal {
  background-color: white;
  box-shadow: 2px 5px 5px rgba(0, 0, 0, 0.5);
  border: solid 1px rgba(0, 0, 0, 0.2);
  padding: 15px;
  position: absolute;
  display: inline-block;
  line-height: 1.5;
  width: calc(100% - 100px);
  z-index: var(--z-index-modal);
  animation: fademostlyin 0.4s;
  min-width: 200px;
}

.modal.opaque {
  animation: fadein 0.4s;
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.99;
  }
}

@keyframes fademostlyin {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.85;
  }
}

.modal p {
  margin: 0 0 1em 0;
}

.modal.center {
  left: 0;
  right: 0;
  margin: 0 auto;
}

.popup {
  box-shadow: none;
  border: none;
  display: block;
  width: 100%;
  padding: 8%;
  box-sizing: border-box;
}

.popup-close-x {
  /* extend click area */
  padding: 10px 20px;
  margin: -10px -20px;
  position: fixed;
  top: calc(9px - 0.2em);
  right: 11px;
  color: inherit;
  text-decoration: none;
}

.status-close-x {
  font-size: 16px;
  top: 0;
  right: 0;
  padding: 0.4em 0.5em 1em 1em; /* extra tap area */
  color: inherit;
  text-decoration: none;
}

.dark .modal a.popup-close-x {
  color: inherit;
}

.popup .modal-content {
  max-width: 40em;
  margin: 0 auto;
  max-height: none;
}

.popup .modal-title {
  font-weight: 700;
  margin-bottom: 40px;
  text-align: center;
}

.popup .modal-subtitle {
  font-family: 'Helvetica Neue';
  font-size: 1.7em;
}

.popup .modal-subtitle-compact {
  margin-bottom: 0.8em;
}

.popup .modal-text {
  margin-bottom: 2em;
}

.popup .modal-actions a.button {
  text-decoration: none;
  background-color: black;
  color: white;
  padding-top: 2px;
  padding-bottom: 2px;
  margin-top: 2px;
  margin-bottom: 2px;
}

.popup-section {
  margin-bottom: 50px;
}

.modal-welcome {
  height: 100%;
  font-size: 26px;
  padding-top: 2em;
}

.modal-welcome .modal-title {
  margin-bottom: 0;
  line-height: 1;
}

.modal-welcome .modal-text {
  margin-top: 2em;
  margin-bottom: 2.5em;
  font-size: 75%;
}

.modal-welcome .modal-actions {
  font-size: 0.75em;
}

.dark .popup .modal-actions a.button {
  color: black;
  background-color: white;
}

.modal-content .button {
  cursor: pointer;
  background: transparent;
  color: #ccc;
  display: block;
  border: 0 none;
  margin: 10px auto 0;
}
.modal-content .button:focus {
  color: #fff;
  outline: 0 none;
  border: 0 none;
}

.dark .popup .modal-actions a {
  color: white;
}

.popup .modal-actions a.button.button-inactive {
  background-color: #aaa;
}

/** Use .modal-actions-stack for buttons that switch to vertical layout on small screen sizes. */
.popup .modal-actions.modal-actions-stack a.button {
  margin-bottom: 0.5em;
}
@media screen and (min-width: 480px) {
  .popup .modal-actions.modal-actions-stack {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .popup .modal-actions.modal-actions-stack > * {
    margin-top: 1em;
  }
  .popup .modal-actions.modal-actions-stack > :not(:last-child) {
    margin-right: 1em;
  }
}

.popup .logo {
  width: 44px;
  vertical-align: text-bottom;
}

.modal-title {
  font-weight: 400;
}

.modal-actions a {
  font-weight: normal;
  margin: 0 5px;
  text-decoration: underline;
  white-space: nowrap;
  line-height: 2;
}

.dark .modal {
  background-color: #333;
  border: solid 1px rgba(255, 255, 255, 0.1);
}

.dark .popup {
  background-color: black;
  border: none;
}

.dark .modal a {
  color: lightblue;
}

.modal-home {
  margin-left: 20px;
  margin-top: -5px;
}

/* higher precendence than ".dark .modal .a" */
.modal-close {
  position: absolute;
  top: -5px;
  right: -5px;
  font-size: 12px;
  vertical-align: middle;
  text-align: center;
  padding: 10px;
}

.popup .modal-close {
  display: none;
}

.modal-close span {
  display: inline-block;
  width: 11px;
  height: 11px;
}

.dark a.modal-close span {
  color: rgba(255, 255, 255, 0.3);
  border-color: rgba(255, 255, 255, 0.3);
}

.animate {
  transition: all 0.4s ease-out;
}
.animate-slow {
  transition: all 1s ease-out;
}
.animate-fadeout {
  opacity: 0;
}

@keyframes pulse {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.25;
  }
}

.animate-pulse {
  animation: pulse 1s infinite alternate;
}

/* arrow */
.arrow:after,
.arrow:before {
  border: solid transparent;
  content: ' ';
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}

.arrow:after {
  border-width: 10px;
}
.arrow:before {
  border-width: 12px;
}

/* arrow left */
.arrow-left:after,
.arrow-left:before {
  right: 100%;
  top: 50%;
}

.arrow-left:after {
  border-right-color: white;
  margin-top: -10px;
}

.arrow-left:before {
  border-right-color: rgba(0, 0, 0, 0.2);
  margin-top: -12px;
}

.dark .arrow-left:after {
  border-right-color: #333;
}
.dark .arrow-left:before {
  border-right-color: rgba(255, 255, 255, 0.15);
}

.arrow-lefttop:after,
.arrow-lefttop:before {
  top: 20px;
}
.arrow-leftbottom:after,
.arrow-leftbottom:before {
  bottom: 20px;
}
.arrow-leftmiddle:after,
.arrow-leftmiddle:before {
  top: 50%;
}

/* arrow up */
.arrow-up:after,
.arrow-up:before {
  bottom: 100%;
  left: 50%;
}

.arrow-up:after {
  border-bottom-color: white;
  margin-left: -10px;
}

.arrow-up:before {
  border-bottom-color: rgba(0, 0, 0, 0.2);
  margin-left: -12px;
}

.dark .arrow-up:after {
  border-bottom-color: #333;
}
.dark .arrow-up:before {
  border-bottom-color: rgba(255, 255, 255, 0.15);
}

.arrow-upleft:before,
.arrow-upleft:after {
  left: 10%;
}

.modal-icon {
  display: inline-block;
  position: fixed;
  bottom: 30px;
  right: 30px;
  color: #666;
  text-align: center;
  animation: fadein 0.4s;
}

.modal-icon-inner {
  font-family: 'Times New Roman';
  display: inline-block;
  width: 25px;
  height: 25px;
  border: solid 1px rgba(0, 0, 0, 0.2);
  border-radius: 99px;
  color: black;
  background-color: whitesmoke;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

.dark .modal-icon-inner {
  color: white;
  background-color: black;
  box-shadow: 0 0 20px white;
}

code,
.code {
  background-color: #ccc;
  font-family: monospace;
}

.dark code {
  background-color: #333;
}

.code-block {
  display: block;
  padding: 5px 10px;
  margin: 2px 5px 10px;
}

.shortcuts {
  font-size: 14px;
}

.shortcuts th {
  padding-right: 1em;
  text-align: left;
  font-weight: normal;
}

.shortcuts td {
  min-width: 10rem;
}

/* center gesture diagrams */
.mobile .shortcuts td {
  text-align: center;
  min-width: auto;
}

.mobile.drag-in-progress * {
  user-select: none;
}

.dragging {
  color: lightblue;
}

/* the bar that displays on hover when dragging thoughts */
.drop-hover {
  position: absolute;
  width: calc(100% - 2em);
  height: 3px;
  border-radius: 99px;
  z-index: var(--z-index-stack);
}

/* Thought drop-hover */
/* only add a margin on the Thought drop hover since Subthought drop hover does not need to offset the bullet */
.thought-container .drop-hover {
  /* Equivalent to -1.2em @ Font Size 18, but scales across Font Sizes 13–24. */
  margin-left: calc(-0.4em - 12px);
  margin-top: -0.2em;
}
.mobile .thought-container .drop-hover {
  /* Equivalent to -1.2em @ Font Size 18, but scales across Font Sizes 13–24. */
  margin-left: calc(-0.4em - 14px);
}

/* the drop target at the end of a context */
.drop-end {
  position: absolute;
  height: 0.5em;
  /* margin to offset bullet width */
  margin-left: -1em;
  /* Add additional click area to position the drop target more evenly between siblings (vertically).
     Unfortunately, due to the HTML hierarchy stacking order, multiple drop-ends at the same y position (e.g. after /a/b/c below) will always be obscured by their previous siblings descendants.
     This is still better than nothing.
   */
  margin-top: -0.5em;
  padding-top: 0.5em;
  /* must use z-index 0 since deeply nested drop targets come BEFORE other subsequent uncles in the HTML. Otherwise z-index will be ignored and the HTML order will force an incorrect stacking order; later uncles will obscure deeply nested drop targets.

  e.g. The subthught drop target for a would incorrectly obscure that of b and c.

  - a
    - b
      - c

  */
  z-index: 0;
  width: calc(100% - 38px);
}

.child.drop-end.last {
  margin-top: 0.4em;
  /* extend click area since there are no thoughts below */
  height: 4em;
}

.child.drop-end::before {
  display: none;
}

/* Last drop-end in Subthoughts */
.drop-end .drop-hover {
  margin-left: calc(0.6em - 13px);
  width: calc(100% - 3em);
}

.drop-empty .drop-end {
  /* override .drop-hover */
  z-index: var(--z-index-drop-empty);
}

.status-button {
  border: solid 1px black;
  border-radius: 99px;
  padding: 2px 7px;
  font-size: 80%;
  transition: opacity 0.75s ease-out;
}

.status-button:hover {
  background-color: black;
  color: white;
}

.dark .status-button {
  border-color: white;
}

.dark .status-button:hover {
  background-color: white;
  color: black;
}

.status-button-fade {
  opacity: 0;
}

.indent {
  display: inline-block;
  margin-top: 5px;
  margin-left: 18px;
}

.search-children a.button {
  /* TODO: Fix the markup rather than overriding the margin; */
  margin: 10px 0 15px -25px;
}

.tutorial {
  padding: 40px 20px 20px;
  background-color: #ddd;
  position: relative;
  z-index: var(--z-index-tutorial);
}

.dark .tutorial {
  background-color: #212121;
  color: white;
}

.tutorial-inner {
  max-width: 32em;
  margin: 0 auto;
}

.tutorial p {
  margin-top: 20px;
}

.tutorial p:first-child {
  margin-top: 0;
}

.tutorial-skip {
  color: #666;
  top: 10px;
  right: 15px;
}

.tutorial-next-wait {
  margin-left: 10px;
  font-style: italic;
}

.tutorial .button {
  margin-left: 5px;
  margin-right: 5px;
}

.tutorial-step-bullets {
  margin-bottom: 10px;
}

.tutorial-step-bullet {
  color: inherit;
  text-decoration: none;
  font-size: 32px;
}

.tutorial-step-bullets .tutorial-step-bullet {
  opacity: 0.25;
  margin-left: 1px;
  margin-right: 1px;
  transition: all 400ms ease-in-out;
}

.tutorial-step-bullets .tutorial-step-bullet.active {
  opacity: 1;
}

.tutorial-trace-gesture {
  position: absolute;
  margin-top: 50px;
  z-index: var(--z-index-tutorial-trace-gesture);
  text-align: center;
  left: 0;
  right: 0;
  background-color: rgba(255, 255, 255, 0.8);
  padding-bottom: 50px;
}

.dark .tutorial-trace-gesture {
  background-color: rgba(0, 0, 0, 0.8);
}

.tutorial li {
  list-style: disc;
  line-height: 1.5;
}

.simple-list li {
  list-style: none;
  width: 240px;
  margin: 0 auto 0.5em;
}

.simple-list a {
  display: block;
}

/* Prose View */

.SplitPane,
.SplitPane .Resizer,
.SplitPane .Pane {
  user-select: none;
}

.Resizer {
  background: #fff;
  opacity: 0.2;
  z-index: var(--z-index-resizer);
  box-sizing: border-box;
  background-clip: padding-box;
}

.Resizer:hover {
  transition: all 0.2s ease-out;
}

.Resizer.horizontal {
  height: 11px;
  margin: -5px 0;
  border-top: 5px solid rgba(255, 255, 255, 0);
  border-bottom: 5px solid rgba(255, 255, 255, 0);
  cursor: row-resize;
  width: 100%;
}

.Resizer.horizontal:hover {
  border-top: 5px solid rgba(0, 0, 0, 0.5);
  border-bottom: 5px solid rgba(0, 0, 0, 0.5);
}

.Resizer.vertical {
  width: 11px;
  margin: 0 -5px;
  border-left: 5px solid rgba(255, 255, 255, 0);
  border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
}

.Resizer.vertical:hover {
  border-left: 5px solid rgba(255, 255, 255, 0.5);
  border-right: 5px solid rgba(255, 255, 255, 0.5);
}
.Resizer.disabled {
  cursor: not-allowed;
}
.Resizer.disabled:hover {
  border-color: transparent;
}
.SplitPane.animating .Pane {
  transition: width 0.2s ease;
}

.MuiDrawer-paperAnchorLeft {
  top: var(--safe-area-top) !important;
}

/* material drawer container css override */
.drawer-container-mobile {
  max-width: 90%;
}

.drawer-container-desktop {
  max-width: 90%;
}

/* hamburger menu div */
/* prevent long press to select */
/* user-select is not inherited */
.hamburger-menu,
.hamburger-menu * {
  user-select: none;
}

.hamburger-menu > div > span {
  background: black;
}

.dark .hamburger-menu > div > span {
  background: white;
}

.ellipsized-path {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sidebar {
  background: #f5f5f5;
  overflow-y: scroll;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  color: black;
  scrollbar-width: thin; /*for firefox*/
  line-height: 1.8;
}

.dark .sidebar {
  color: white;
  background: #292a2b;
}

.sidebar::-webkit-scrollbar {
  width: 0px; /* Remove scrollbar space */
  background: transparent; /* Optional: just make scrollbar invisible */
  display: none;
}

.thoughts-tab {
  transition: all 0.4s linear;
}

.thoughts-tab::-webkit-scrollbar {
  width: 0px; /* Remove scrollbar space */
  background: transparent; /* Optional: just make scrollbar invisible */
  display: none;
}

.thoughts-tab:hover {
  opacity: 1;
}

.icon {
  cursor: pointer;
  flex: 1;
  transition: all 0.1s ease-in-out;
}

.icon-text {
  flex: 8;
  font-size: 12px;
}

.divider-container {
  margin-top: 5px;
}

.editing > .thought-container > .thought > .divider-container > .divider {
  border-color: rgb(204, 204, 204);
}

.child-divider {
  margin-left: -125px;
}

.child-divider .drop-hover {
  margin-left: 6px;
}

.inside-divider .drop-hover {
  margin-left: 6px;
}

.child-divider .bullet {
  display: none !important;
}

.divider {
  border: solid 1px gray;
}

.dark .divider {
  border-color: #333;
}

.gesture-container svg {
  position: relative;
  top: 10px;
}

.search-container {
  display: flex;
}

.search-container > .thought {
  flex: 1;
  display: flex;
}

.function > .thought-container > .thought > .editable {
  font-family: monospace;
}

.function > .thought-container > .editable-annotation {
  background-color: #ddd;
  font-family: monospace;
}

.dark .function > .thought-container > .editable-annotation {
  background-color: #222;
}

.modal-export-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 10px;
}

.modal-btn-export {
  font-family: Helvetica;
  text-align: center;
  cursor: pointer;
  outline: none;
  padding: 2px 30px;
  min-width: 90px;
  display: inline-block;
  border-radius: 99px;
  margin: 0 5px 15px 5px;
  white-space: nowrap;
  line-height: 2;
  text-decoration: none;
  border: none;
}

.modal-export-btns-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.modal-btn-cancel {
  cursor: pointer;
  border: none;
  outline: none;
  background: none;
}

.modal-export-publish {
  border-top: solid 1px #ccc;
  margin-top: 30px;
  margin-bottom: 20px;
  padding-top: 40px;
  text-align: center;
}

.dark .modal-export-publish {
  border-top-color: #444;
}

.cp-clipboard-wrapper {
  margin-bottom: 15px;
  text-align: center;
}

.drop-down-wrapper {
  background-color: white;
  box-shadow: 0 0 10px 0px black;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  border: 1px solid white;
  position: absolute;
  right: 3px;
  padding: 0px 5px;
  z-index: var(--z-index-stack);
}

.drop-down-wrapper .drop-down-option-wrapper {
  cursor: pointer;
  padding: 2px 0px;
  border-top: 1px solid #444;
  transition: opacity 150ms ease-in;
}

.drop-down-wrapper .drop-down-option-wrapper:hover {
  opacity: 0.85;
}

.drop-down-wrapper .drop-down-option-wrapper:first-child {
  border-top: none;
}

.drop-down-wrapper .drop-down-option {
  display: flex;
  align-items: center;
  margin-left: 10px;
}

.drop-down-wrapper .drop-down-option .drop-down-label {
  margin-left: 10px;
  width: 95px;
}

.dark .drop-down-wrapper {
  background-color: black;
}

.invalid-option {
  color: tomato !important;
}

/* Publish */

.publish-meta {
  margin: 15px 0;
  font-size: 85%;
  overflow: hidden;
  line-height: 1.4;
}

.publish-meta .react-gravatar {
  margin: 10px 10px 10px 0;
  border-radius: 9999px;
  float: left;
}

.publish-meta .byline:first-of-type {
  margin-top: 15px;
}

.publish-meta .byline:nth-of-type(2) {
  opacity: 0.6;
}

.quick-add-button {
  display: inline-flex;
  transition: transform 200ms ease-in-out;
}

.latest-shortcuts-wrapper {
  position: absolute;
  /* Using vh here allows shortcuts diagram to always appear keyboard in mobile. */
  height: 100vh;
  width: 100%;
}

.latest-shortcuts-transition-enter {
  opacity: 0;
}

.latest-shortcuts-transition-enter-active {
  opacity: 1;
  transition: opacity 400ms;
}

.latest-shortcuts-transition-exit {
  opacity: 1;
}
.latest-shortcuts-transition-exit-active {
  opacity: 0;
  transition: opacity 400ms;
}

.latest-shortcuts {
  position: absolute;
  width: 100%;
  display: flex;
  justify-content: center;
  z-index: var(--z-index-latest-shortcuts);
  pointer-events: none;
}

.latest-shortcuts.middle {
  top: 30%;
}

.latest-shortcuts.bottom {
  bottom: 20%;
}

.latest-shortcuts .shortcut-tab {
  background: rgb(94, 94, 94);
  border-radius: 7px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0.7;
  padding: 10px;
  margin: 0 2px;
}

.quick-add-button.rotate {
  transform: rotate(135deg);
}

@keyframes ellipsis {
  to {
    width: 1.25em;
  }
}

.loading-ellipsis:after {
  overflow: hidden;
  position: absolute;
  display: inline-block;
  vertical-align: bottom;
  -webkit-animation: ellipsis steps(4, end) 1000ms infinite;
  animation: ellipsis steps(4, end) 1000ms infinite;
  content: '\2026'; /* ascii code for the ellipsis character */
  width: 0;
  margin-left: 0.1em;
}

@keyframes toblack {
  to {
    color: black;
    fill: black;
  }
}

@keyframes towhite {
  to {
    color: white;
    fill: white;
  }
}

.gray {
  color: #666;
  fill: #666;
}

.graypulse {
  color: #666;
  fill: #666;
  -webkit-animation: toblack 400ms infinite alternate ease-in-out;
}

.dark .graypulse {
  -webkit-animation: towhite 400ms infinite alternate ease-in-out;
}

.no-select {
  user-select: none;
}

.empty-thoughtspace {
  animation: 0.4s ease-out 0s normal forwards fadein;
}

/* See: https://stackoverflow.com/a/60712537/480608 */
@keyframes preventAutoscroll {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.preventAutoscroll {
  animation: 0.01s 1 preventAutoscroll;
}

@keyframes ripple_loader {
  0% {
    top: 100%;
    left: 100%;
    width: 0;
    height: 0;
    opacity: 1;
  }
  100% {
    top: 7.14%;
    left: 7.14%;
    width: 162.5%;
    height: 162.5%;
    opacity: 0;
  }
}
.ripple_loader div {
  position: absolute;
  border-width: 19.04%;
  border-style: solid;
  opacity: 1;
  border-radius: 50%;
  animation: ripple_loader 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
}
.ripple_loader div:nth-child(1) {
  border-color: #e90c59;
  animation-delay: 0s;
}
.ripple_loader div:nth-child(2) {
  border-color: #46dff0;
  animation-delay: -0.5s;
}
.ripple_loader_container {
  display: inline-block;
  overflow: hidden;
  background: rgba(255, 255, 255, 0);
}
.ripple_loader {
  width: 100%;
  height: 100%;
  position: relative;
  transform: translateZ(0) scale(0.49);
  backface-visibility: hidden;
  transform-origin: 0 0; /* see note above */
}
.ripple_loader div {
  box-sizing: content-box;
}

.advance-setting-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 2em;
}

p.checkbox-description {
  margin-top: 0.5em;
}

.advance-setting-link {
  display: flex;
  position: relative;
  transition: opacity 100ms ease-in-out;
}

a.advance-setting-link {
  color: #000;
}
.dark a.advance-setting-link {
  color: #fff;
}

.advance-setting-chevron {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
}

.advance-setting-section {
  display: flex;
  justify-content: center;
  margin: 0 auto;
  max-width: 34em;
  flex-direction: column;
}

.rotate180 {
  transform: rotate(180deg);
}

/* Custom checkbox style starts */
.checkbox-container {
  display: block;
  position: relative;
  padding-left: 2.2em;
  user-select: none;
}

.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkbox {
  position: absolute;
  top: 0.1em;
  left: 0.1em;
  height: 1em;
  width: 1em;
  background-color: #fff;
}

.checkbox-container input ~ .checkbox,
.checkbox-container:hover input ~ .checkbox,
.checkbox-container input:checked ~ .checkbox {
  background-color: transparent;
  border: 0.1em solid #fff;
}

/* Create the checkbox/indicator (hidden when not checked) */
.checkbox:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkbox when checked */
.checkbox-container input:checked ~ .checkbox:after {
  display: block;
}

/* checkbox indicator */
.checkbox-container .checkbox:after {
  left: 0.3em;
  bottom: 0.2em;
  width: 0.3em;
  height: 0.65em;
  border: solid white;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
}
/* Custom checkbox style ends */

.modal .modal-wrapper {
  display: flex;
  min-height: 100px;
  flex-direction: column;
}

.modal .modal-description {
  font-size: 18px;
  margin-bottom: 30px;
}

.gift-code-wrapper {
  display: flex;
  flex-direction: row;
  align-self: start;
  margin: 3vh auto;
  align-items: center;
  width: 100%;
}

.gift-code-wrapper svg {
  cursor: default;
}

.gift-code-wrapper input {
  margin: 0 10px;
  min-width: 180px;
}

@media only screen and (min-width: 767px) {
  .gift-code-wrapper {
    width: 80%;
  }

  .gift-code-wrapper input {
    min-width: 300px;
  }
}

.copy-icon-wrapper {
  display: 'inline-flex';
}

.copy-icon-wrapper svg {
  cursor: pointer;
}

a {
  user-select: none;
}
